Traceback (most recent call last):
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ggeorg02/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
import json
import urllib.parse
from py2neo import Graph

with open('credentials_neo4j.json') as f:
    login = json.load(f)

username = login['username']
password = urllib.parse.quote(login['password'])
host = login['host']
url = "neo4j+s://{}".format(host)

# This is our neo4j Connection Object:
graph = Graph(uri = url,
              user = username,
              password = password,
             secure=True,
             routing=True)

# Your query
most = graph.run("""MATCH (m:Movie) RETURN m.title LIMIT 1""").data()
print(most)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mServiceUnavailable[0m                        Traceback (most recent call last)
Cell [0;32mIn[1], line 22[0m
[1;32m     15[0m graph [38;5;241m=[39m Graph(uri [38;5;241m=[39m url,
[1;32m     16[0m               user [38;5;241m=[39m username,
[1;32m     17[0m               password [38;5;241m=[39m password,
[1;32m     18[0m              secure[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m     19[0m              routing[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m     21[0m [38;5;66;03m# Your query[39;00m
[0;32m---> 22[0m most [38;5;241m=[39m [43mgraph[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[38;5;124;43m"""[39;49m[38;5;124;43mMATCH (m:Movie) RETURN m.title LIMIT 1[39;49m[38;5;124;43m"""[39;49m[43m)[49m[38;5;241m.[39mdata()
[1;32m     23[0m [38;5;28mprint[39m(most)

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/database.py:405[0m, in [0;36mGraph.run[0;34m(self, cypher, parameters, **kwparameters)[0m
[1;32m    395[0m [38;5;28;01mdef[39;00m [38;5;21mrun[39m([38;5;28mself[39m, cypher, parameters[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwparameters):
[1;32m    396[0m [38;5;250m    [39m[38;5;124;03m""" Run a single read/write query within an auto-commit[39;00m
[1;32m    397[0m [38;5;124;03m    :class:`~py2neo.Transaction`.[39;00m
[1;32m    398[0m 
[0;32m   (...)[0m
[1;32m    403[0m [38;5;124;03m    :return:[39;00m
[1;32m    404[0m [38;5;124;03m    """[39;00m
[0;32m--> 405[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mauto[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43mcypher[49m[43m,[49m[43m [49m[43mparameters[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwparameters[49m[43m)[49m

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/database.py:989[0m, in [0;36mTransaction.run[0;34m(self, cypher, parameters, **kwparameters)[0m
[1;32m    987[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_connector[38;5;241m.[39mrun([38;5;28mself[39m[38;5;241m.[39mref, cypher, parameters)
[1;32m    988[0m [38;5;28;01melse[39;00m:
[0;32m--> 989[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_connector[49m[38;5;241;43m.[39;49m[43mauto_run[49m[43m([49m[43mcypher[49m[43m,[49m[43m [49m[43mparameters[49m[43m,[49m
[1;32m    990[0m [43m                                      [49m[43mgraph_name[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgraph[49m[38;5;241;43m.[39;49m[43mname[49m[43m,[49m
[1;32m    991[0m [43m                                      [49m[43mreadonly[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mreadonly[49m[43m)[49m
[1;32m    992[0m [38;5;28mself[39m[38;5;241m.[39m_connector[38;5;241m.[39mpull(result, [38;5;241m-[39m[38;5;241m1[39m)
[1;32m    993[0m [38;5;28;01mreturn[39;00m Cursor(result, hydrant)

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/client/__init__.py:1338[0m, in [0;36mConnector.auto_run[0;34m(self, cypher, parameters, graph_name, readonly)[0m
[1;32m   1321[0m [38;5;28;01mdef[39;00m [38;5;21mauto_run[39m([38;5;28mself[39m, cypher, parameters[38;5;241m=[39m[38;5;28;01mNone[39;00m, graph_name[38;5;241m=[39m[38;5;28;01mNone[39;00m, readonly[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m   1322[0m              [38;5;66;03m# after=None, metadata=None, timeout=None[39;00m
[1;32m   1323[0m              ):
[1;32m   1324[0m [38;5;250m    [39m[38;5;124;03m""" Run a Cypher query within a new auto-commit transaction.[39;00m
[1;32m   1325[0m 
[1;32m   1326[0m [38;5;124;03m    :param cypher:[39;00m
[0;32m   (...)[0m
[1;32m   1336[0m [38;5;124;03m        cannot be honoured[39;00m
[1;32m   1337[0m [38;5;124;03m    """[39;00m
[0;32m-> 1338[0m     cx [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_acquire[49m[43m([49m[43mgraph_name[49m[43m)[49m
[1;32m   1339[0m     [38;5;28;01mtry[39;00m:
[1;32m   1340[0m         [38;5;28;01mreturn[39;00m cx[38;5;241m.[39mauto_run(cypher, parameters, graph_name[38;5;241m=[39mgraph_name, readonly[38;5;241m=[39mreadonly)

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/client/__init__.py:1111[0m, in [0;36mConnector._acquire[0;34m(self, graph_name, readonly)[0m
[1;32m   1109[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_acquire_ro(graph_name)
[1;32m   1110[0m [38;5;28;01melse[39;00m:
[0;32m-> 1111[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_acquire_rw[49m[43m([49m[43mgraph_name[49m[43m)[49m

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/client/__init__.py:1203[0m, in [0;36mConnector._acquire_rw[0;34m(self, graph_name)[0m
[1;32m   1199[0m [38;5;66;03m# TODO: exit immediately if the server/cluster is in readonly mode[39;00m
[1;32m   1201[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m-> 1203[0m     ro_profiles, rw_profiles [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_profiles[49m[43m([49m[43mgraph_name[49m[43m,[49m[43m [49m[43mreadonly[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m
[1;32m   1204[0m     [38;5;28;01mif[39;00m rw_profiles:
[1;32m   1205[0m         [38;5;66;03m# There is at least one writer, so collect the pools[39;00m
[1;32m   1206[0m         [38;5;66;03m# for those writers. In all implementations to date,[39;00m
[1;32m   1207[0m         [38;5;66;03m# a Neo4j cluster will only ever contain at most one[39;00m
[1;32m   1208[0m         [38;5;66;03m# writer (per database). But this algorithm should[39;00m
[1;32m   1209[0m         [38;5;66;03m# still survive if that changes.[39;00m
[1;32m   1210[0m         pools [38;5;241m=[39m [pool [38;5;28;01mfor[39;00m profile, pool [38;5;129;01min[39;00m [38;5;28mlist[39m([38;5;28mself[39m[38;5;241m.[39m_pools[38;5;241m.[39mitems())
[1;32m   1211[0m                  [38;5;28;01mif[39;00m profile [38;5;129;01min[39;00m rw_profiles]

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/client/__init__.py:1016[0m, in [0;36mConnector._get_profiles[0;34m(self, graph_name, readonly)[0m
[1;32m   1014[0m         rt[38;5;241m.[39mwait_until_updated()
[1;32m   1015[0m [38;5;28;01melse[39;00m:
[0;32m-> 1016[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrefresh_routing_table[49m[43m([49m[43mgraph_name[49m[43m)[49m

File [0;32m~/opt/miniconda3/envs/bait580envtestbug/lib/python3.12/site-packages/py2neo/client/__init__.py:1064[0m, in [0;36mConnector.refresh_routing_table[0;34m(self, graph_name)[0m
[1;32m   1062[0m                 cx[38;5;241m.[39mrelease()
[1;32m   1063[0m     [38;5;28;01melse[39;00m:
[0;32m-> 1064[0m         [38;5;28;01mraise[39;00m ServiceUnavailable([38;5;124m"[39m[38;5;124mCannot connect to any known routers[39m[38;5;124m"[39m)
[1;32m   1065[0m [38;5;28;01mfinally[39;00m:
[1;32m   1066[0m     rt[38;5;241m.[39mset_not_updating()

[0;31mServiceUnavailable[0m: Cannot connect to any known routers

